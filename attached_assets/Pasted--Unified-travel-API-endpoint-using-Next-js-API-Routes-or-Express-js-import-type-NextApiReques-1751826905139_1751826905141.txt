// Unified travel API endpoint using Next.js API Routes or Express.js

import type { NextApiRequest, NextApiResponse } from 'next';

const RAPIDAPI_KEY = process.env.RAPIDAPI_KEY;
const RAPIDAPI_HOST_FLIGHTS = 'sky-scanner3.p.rapidapi.com';
const RAPIDAPI_HOST_HOTELS = 'hotels-com-provider.p.rapidapi.com';

export default async function handler(req: NextApiRequest, res: NextApiResponse) {
  const { from, to, departDate, returnDate } = req.body;

  try {
    const [flights, hotels, cars, mistakeFares] = await Promise.all([
      fetchSkyscannerFlights(from, to, departDate),
      fetchHotels(to, departDate, returnDate),
      fetchCarRentals(to, departDate, returnDate),
      fetchMistakeFares(from, to, departDate)
    ]);

    res.status(200).json({ flights, hotels, carRentals: cars, mistakeFares });
  } catch (error) {
    console.error('Unified travel API error:', error);
    res.status(500).json({ error: 'Failed to fetch travel deals' });
  }
}

async function fetchSkyscannerFlights(from: string, to: string, departDate: string) {
  const response = await fetch(`https://${RAPIDAPI_HOST_FLIGHTS}/flights/search-one-way`, {
    method: 'POST',
    headers: {
      'X-RapidAPI-Key': RAPIDAPI_KEY!,
      'X-RapidAPI-Host': RAPIDAPI_HOST_FLIGHTS,
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      fromEntityId: from,
      toEntityId: to,
      departDate,
      adults: 1,
      currency: 'USD',
      market: 'US',
      locale: 'en-US'
    })
  });
  return response.json();
}

async function fetchHotels(to: string, checkIn: string, checkOut: string) {
  const response = await fetch(`https://${RAPIDAPI_HOST_HOTELS}/properties/list`, {
    method: 'GET',
    headers: {
      'X-RapidAPI-Key': RAPIDAPI_KEY!,
      'X-RapidAPI-Host': RAPIDAPI_HOST_HOTELS
    },
    // Add real destinationId handling or geolocation conversion
    qs: {
      destinationId: '1506246', // Example: NYC Midtown
      pageNumber: '1',
      checkIn,
      checkOut,
      adults1: '1',
      sortOrder: 'PRICE',
      currency: 'USD',
      locale: 'en_US'
    }
  });
  return response.json();
}

async function fetchCarRentals(location: string, pickupDate: string, returnDate: string) {
  // Replace with real Amadeus credentials or RapidAPI version
  return { rentals: 'Coming soon from Amadeus' };
}

async function fetchMistakeFares(from: string, to: string, depart: string) {
  const url = `https://skiplagged.com/api/search.php?from=${from}&to=${to}&depart=${depart}&format=json`;
  const response = await fetch(url, {
    headers: {
      'User-Agent': 'Mozilla/5.0',
      'Accept': 'application/json'
    }
  });
  return response.json();
}
